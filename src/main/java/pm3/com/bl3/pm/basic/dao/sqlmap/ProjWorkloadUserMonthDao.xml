<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- st_proj_workload_user_month[ProjWorkloadUserMonth]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2018-05-26 22:48:54 -->
<mapper namespace="com.bl3.pm.basic.dao.ProjWorkloadUserMonthDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="st_work_user_id" parameterType="ProjWorkloadUserMonthPO">
		INSERT INTO st_proj_workload_user_month (
		<if test="proj_id != null">
	         proj_id, <!-- 项目ID -->
		</if>
		<if test="user_id != null">
	         user_id, <!-- user_id -->
		</if>
		<if test="month != null">
	         month, <!-- 年月（默认格式YYYYMM） -->
		</if>
		<if test="demand_num != null">
	         demand_num, <!-- 需求数量 -->
		</if>
		<if test="demand_total_num != null">
	         demand_total_num, <!-- 总需求数量 -->
		</if>
		<if test="task_num != null">
	         task_num, <!-- 任务数量 -->
		</if>
		<if test="task_total_num != null">
	         task_total_num, <!-- 总任务数量 -->
		</if>
		<if test="defect_num != null">
	         defect_num, <!-- 缺陷数量 -->
		</if>
		<if test="defect_total_num != null">
	         defect_total_num, <!-- 总缺陷数量 -->
		</if>
		<if test="plan_workload != null and plan_workload != ''">
	         plan_workload, <!-- 项目的计划工作量 -->
		</if>
		<if test="real_workload != null and real_workload != ''">
	         real_workload, <!-- 实际工作量 -->
		</if>
		<if test="total_plan_workload != null and total_plan_workload != ''">
	         total_plan_workload, <!-- 总计划工作量 -->
		</if>
		<if test="total_real_workload != null and total_real_workload != ''">
	         total_real_workload, <!-- 总实际工作量 -->
		</if>
		<if test="create_user_id != null">
	         create_user_id, <!-- 生成人 -->
		</if>
		<if test="create_time != null and create_time != ''">
	         create_time, <!-- 生成时间 -->
		</if>
		<if test="update_user_id != null">
	         update_user_id, <!-- 更新人 -->
		</if>
		<if test="update_time != null and update_time != ''">
	         update_time, <!-- 更新时间 -->
		</if>
		<if test="state != null and state != ''">
	         state, <!-- 状态，默认1有效，0无效 -->
		</if>
	          st_work_user_id
		)VALUES(
		<if test="proj_id != null">
	          #{proj_id, jdbcType=INTEGER}, <!-- 项目ID -->
	    </if>
		<if test="user_id != null">
	          #{user_id, jdbcType=INTEGER}, <!-- user_id -->
	    </if>
		<if test="month != null">
	          #{month, jdbcType=INTEGER}, <!-- 年月（默认格式YYYYMM） -->
	    </if>
		<if test="demand_num != null">
	          #{demand_num, jdbcType=INTEGER}, <!-- 需求数量 -->
	    </if>
		<if test="demand_total_num != null">
	          #{demand_total_num, jdbcType=INTEGER}, <!-- 总需求数量 -->
	    </if>
		<if test="task_num != null">
	          #{task_num, jdbcType=INTEGER}, <!-- 任务数量 -->
	    </if>
		<if test="task_total_num != null">
	          #{task_total_num, jdbcType=INTEGER}, <!-- 总任务数量 -->
	    </if>
		<if test="defect_num != null">
	          #{defect_num, jdbcType=INTEGER}, <!-- 缺陷数量 -->
	    </if>
		<if test="defect_total_num != null">
	          #{defect_total_num, jdbcType=INTEGER}, <!-- 总缺陷数量 -->
	    </if>
		<if test="plan_workload != null and plan_workload != ''">
	          #{plan_workload, jdbcType=VARCHAR}, <!-- 项目的计划工作量 -->
	    </if>
		<if test="real_workload != null and real_workload != ''">
	          #{real_workload, jdbcType=VARCHAR}, <!-- 实际工作量 -->
	    </if>
		<if test="total_plan_workload != null and total_plan_workload != ''">
	          #{total_plan_workload, jdbcType=VARCHAR}, <!-- 总计划工作量 -->
	    </if>
		<if test="total_real_workload != null and total_real_workload != ''">
	          #{total_real_workload, jdbcType=VARCHAR}, <!-- 总实际工作量 -->
	    </if>
		<if test="create_user_id != null">
	          #{create_user_id, jdbcType=INTEGER}, <!-- 生成人 -->
	    </if>
		<if test="create_time != null and create_time != ''">
	          #{create_time, jdbcType=VARCHAR}, <!-- 生成时间 -->
	    </if>
		<if test="update_user_id != null">
	          #{update_user_id, jdbcType=INTEGER}, <!-- 更新人 -->
	    </if>
		<if test="update_time != null and update_time != ''">
	          #{update_time, jdbcType=VARCHAR}, <!-- 更新时间 -->
	    </if>
		<if test="state != null and state != ''">
	          #{state, jdbcType=VARCHAR}, <!-- 状态，默认1有效，0无效 -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="st_work_user_id" parameterType="ProjWorkloadUserMonthPO">
		INSERT INTO st_proj_workload_user_month (
		    <include refid="column" />
		)
		VALUES (
		    #{st_work_user_id, jdbcType=INTEGER},  <!-- 项目工作量人员月度统计ID -->
		    #{proj_id, jdbcType=INTEGER},  <!-- 项目ID -->
		    #{user_id, jdbcType=INTEGER},  <!-- user_id -->
		    #{month, jdbcType=INTEGER},  <!-- 年月（默认格式YYYYMM） -->
		    #{demand_num, jdbcType=INTEGER},  <!-- 需求数量 -->
		    #{demand_total_num, jdbcType=INTEGER},  <!-- 总需求数量 -->
		    #{task_num, jdbcType=INTEGER},  <!-- 任务数量 -->
		    #{task_total_num, jdbcType=INTEGER},  <!-- 总任务数量 -->
		    #{defect_num, jdbcType=INTEGER},  <!-- 缺陷数量 -->
		    #{defect_total_num, jdbcType=INTEGER},  <!-- 总缺陷数量 -->
		    #{plan_workload, jdbcType=VARCHAR},  <!-- 项目的计划工作量 -->
		    #{real_workload, jdbcType=VARCHAR},  <!-- 实际工作量 -->
		    #{total_plan_workload, jdbcType=VARCHAR},  <!-- 总计划工作量 -->
		    #{total_real_workload, jdbcType=VARCHAR},  <!-- 总实际工作量 -->
		    #{create_user_id, jdbcType=INTEGER},  <!-- 生成人 -->
		    #{create_time, jdbcType=VARCHAR},  <!-- 生成时间 -->
		    #{update_user_id, jdbcType=INTEGER},  <!-- 更新人 -->
		    #{update_time, jdbcType=VARCHAR},  <!-- 更新时间 -->
		    #{state, jdbcType=VARCHAR}  <!-- 状态，默认1有效，0无效 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="ProjWorkloadUserMonthPO">
		UPDATE st_proj_workload_user_month
		<set>
			<if test="st_work_user_id != null">
		          st_work_user_id = #{st_work_user_id, jdbcType=INTEGER},  <!-- 项目工作量人员月度统计ID -->
			</if>
			<if test="proj_id != null">
		          proj_id = #{proj_id, jdbcType=INTEGER},  <!-- 项目ID -->
			</if>
			<if test="user_id != null">
		          user_id = #{user_id, jdbcType=INTEGER},  <!-- user_id -->
			</if>
			<if test="month != null">
		          month = #{month, jdbcType=INTEGER},  <!-- 年月（默认格式YYYYMM） -->
			</if>
			<if test="demand_num != null">
		          demand_num = #{demand_num, jdbcType=INTEGER},  <!-- 需求数量 -->
			</if>
			<if test="demand_total_num != null">
		          demand_total_num = #{demand_total_num, jdbcType=INTEGER},  <!-- 总需求数量 -->
			</if>
			<if test="task_num != null">
		          task_num = #{task_num, jdbcType=INTEGER},  <!-- 任务数量 -->
			</if>
			<if test="task_total_num != null">
		          task_total_num = #{task_total_num, jdbcType=INTEGER},  <!-- 总任务数量 -->
			</if>
			<if test="defect_num != null">
		          defect_num = #{defect_num, jdbcType=INTEGER},  <!-- 缺陷数量 -->
			</if>
			<if test="defect_total_num != null">
		          defect_total_num = #{defect_total_num, jdbcType=INTEGER},  <!-- 总缺陷数量 -->
			</if>
			<if test="plan_workload != null">
		          plan_workload = #{plan_workload, jdbcType=VARCHAR},  <!-- 项目的计划工作量 -->
			</if>
			<if test="real_workload != null">
		          real_workload = #{real_workload, jdbcType=VARCHAR},  <!-- 实际工作量 -->
			</if>
			<if test="total_plan_workload != null">
		          total_plan_workload = #{total_plan_workload, jdbcType=VARCHAR},  <!-- 总计划工作量 -->
			</if>
			<if test="total_real_workload != null">
		          total_real_workload = #{total_real_workload, jdbcType=VARCHAR},  <!-- 总实际工作量 -->
			</if>
			<if test="create_user_id != null">
		          create_user_id = #{create_user_id, jdbcType=INTEGER},  <!-- 生成人 -->
			</if>
			<if test="create_time != null">
		          create_time = #{create_time, jdbcType=VARCHAR},  <!-- 生成时间 -->
			</if>
			<if test="update_user_id != null">
		          update_user_id = #{update_user_id, jdbcType=INTEGER},  <!-- 更新人 -->
			</if>
			<if test="update_time != null">
		          update_time = #{update_time, jdbcType=VARCHAR},  <!-- 更新时间 -->
			</if>
			<if test="state != null">
		          state = #{state, jdbcType=VARCHAR},  <!-- 状态，默认1有效，0无效 -->
			</if>
		</set>
		WHERE  st_work_user_id = #{st_work_user_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM st_proj_workload_user_month WHERE  st_work_user_id = #{st_work_user_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="ProjWorkloadUserMonthPO">
		SELECT
		<include refid="column" />
		FROM st_proj_workload_user_month WHERE  st_work_user_id = #{st_work_user_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="ProjWorkloadUserMonthPO">
		SELECT
		    <include refid="column" />
		FROM st_proj_workload_user_month
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Dto">
		SELECT
			<include refid="column" />	
		FROM st_proj_workload_user_month
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="ProjWorkloadUserMonthPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM st_proj_workload_user_month
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="like" parameterType="Dto" resultType="ProjWorkloadUserMonthPO">
		SELECT
			<include refid="column" />	
		FROM st_proj_workload_user_month
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likeOr" parameterType="Dto" resultType="ProjWorkloadUserMonthPO">
		SELECT
			<include refid="column" />	
		FROM st_proj_workload_user_month
		<where>
		    <include refid="likeOr" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likePage" parameterType="Dto" resultType="ProjWorkloadUserMonthPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM st_proj_workload_user_month
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="likeOrPage" parameterType="Dto" resultType="Dto" useCache="false">
	    SELECT
	        ( select  project_for_short  from  bs_proj_commons bpc where  bpc.proj_id=st_proj_workload_user_month.proj_id)as proj_name,    
			(select name from aos_user au where au.id=update_user_id)update_user_name,
			(select name from aos_user au where au.id=user_id)user_name,
			(select name from aos_user au where au.id=create_user_id)create_user_name,
			<include refid="column" />	
		FRoM st_proj_workload_user_month
		<where>
		    <include refid="equal" />
		</where>	
	</select>	
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM st_proj_workload_user_month
		<where>
		    <include refid="equal" />
		</where>
		order by month desc
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM st_proj_workload_user_month
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  st_work_user_id,  <!-- 项目工作量人员月度统计ID -->
		  proj_id,  <!-- 项目ID -->
		  user_id,  <!-- user_id -->
		  month,  <!-- 年月（默认格式YYYYMM） -->
		  demand_num,  <!-- 需求数量 -->
		  demand_total_num,  <!-- 总需求数量 -->
		  task_num,  <!-- 任务数量 -->
		  task_total_num,  <!-- 总任务数量 -->
		  defect_num,  <!-- 缺陷数量 -->
		  defect_total_num,  <!-- 总缺陷数量 -->
		  plan_workload,  <!-- 项目的计划工作量 -->
		  real_workload,  <!-- 实际工作量 -->
		  total_plan_workload,  <!-- 总计划工作量 -->
		  total_real_workload,  <!-- 总实际工作量 -->
		  create_user_id,  <!-- 生成人 -->
		  create_time,  <!-- 生成时间 -->
		  update_user_id,  <!-- 更新人 -->
		  update_time,  <!-- 更新时间 -->
		  state  <!-- 状态，默认1有效，0无效 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  st_proj_workload_user_month.st_work_user_id,  <!-- 项目工作量人员月度统计ID -->
		  st_proj_workload_user_month.proj_id,  <!-- 项目ID -->
		  st_proj_workload_user_month.user_id,  <!-- user_id -->
		  st_proj_workload_user_month.month,  <!-- 年月（默认格式YYYYMM） -->
		  st_proj_workload_user_month.demand_num,  <!-- 需求数量 -->
		  st_proj_workload_user_month.demand_total_num,  <!-- 总需求数量 -->
		  st_proj_workload_user_month.task_num,  <!-- 任务数量 -->
		  st_proj_workload_user_month.task_total_num,  <!-- 总任务数量 -->
		  st_proj_workload_user_month.defect_num,  <!-- 缺陷数量 -->
		  st_proj_workload_user_month.defect_total_num,  <!-- 总缺陷数量 -->
		  st_proj_workload_user_month.plan_workload,  <!-- 项目的计划工作量 -->
		  st_proj_workload_user_month.real_workload,  <!-- 实际工作量 -->
		  st_proj_workload_user_month.total_plan_workload,  <!-- 总计划工作量 -->
		  st_proj_workload_user_month.total_real_workload,  <!-- 总实际工作量 -->
		  st_proj_workload_user_month.create_user_id,  <!-- 生成人 -->
		  st_proj_workload_user_month.create_time,  <!-- 生成时间 -->
		  st_proj_workload_user_month.update_user_id,  <!-- 更新人 -->
		  st_proj_workload_user_month.update_time,  <!-- 更新时间 -->
		  st_proj_workload_user_month.state  <!-- 状态，默认1有效，0无效 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="st_work_user_id != null ">
		      AND st_work_user_id = #{st_work_user_id}  <!-- 项目工作量人员月度统计ID -->
		</if>
	   <if test="proj_id != null ">
		      AND proj_id = #{proj_id}  <!-- 项目ID -->
		</if>
	   <if test="user_id != null ">
		      AND user_id = #{user_id}  <!-- user_id -->
		</if>
	   <if test="month != null ">
		      AND month = #{month}  <!-- 年月（默认格式YYYYMM） -->
		</if>
	   <if test="demand_num != null ">
		      AND demand_num = #{demand_num}  <!-- 需求数量 -->
		</if>
	   <if test="demand_total_num != null ">
		      AND demand_total_num = #{demand_total_num}  <!-- 总需求数量 -->
		</if>
	   <if test="task_num != null ">
		      AND task_num = #{task_num}  <!-- 任务数量 -->
		</if>
	   <if test="task_total_num != null ">
		      AND task_total_num = #{task_total_num}  <!-- 总任务数量 -->
		</if>
	   <if test="defect_num != null ">
		      AND defect_num = #{defect_num}  <!-- 缺陷数量 -->
		</if>
	   <if test="defect_total_num != null ">
		      AND defect_total_num = #{defect_total_num}  <!-- 总缺陷数量 -->
		</if>
	    <if test="plan_workload != null and plan_workload != ''">
		      AND plan_workload = #{plan_workload}  <!-- 项目的计划工作量 -->
		</if>
	    <if test="real_workload != null and real_workload != ''">
		      AND real_workload = #{real_workload}  <!-- 实际工作量 -->
		</if>
	    <if test="total_plan_workload != null and total_plan_workload != ''">
		      AND total_plan_workload = #{total_plan_workload}  <!-- 总计划工作量 -->
		</if>
	    <if test="total_real_workload != null and total_real_workload != ''">
		      AND total_real_workload = #{total_real_workload}  <!-- 总实际工作量 -->
		</if>
	   <if test="create_user_id != null ">
		      AND create_user_id = #{create_user_id}  <!-- 生成人 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time = #{create_time}  <!-- 生成时间 -->
		</if>
	   <if test="update_user_id != null ">
		      AND update_user_id = #{update_user_id}  <!-- 更新人 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      AND update_time = #{update_time}  <!-- 更新时间 -->
		</if>
	    <if test="state != null and state != ''">
		      AND state = #{state}  <!-- 状态，默认1有效，0无效 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 交集-->
	<sql id="like">
	    <if test="plan_workload != null and plan_workload != ''">
		      AND plan_workload like '${plan_workload}%'  <!-- 项目的计划工作量 -->
		</if>
	    <if test="real_workload != null and real_workload != ''">
		      AND real_workload like '${real_workload}%'  <!-- 实际工作量 -->
		</if>
	    <if test="total_plan_workload != null and total_plan_workload != ''">
		      AND total_plan_workload like '${total_plan_workload}%'  <!-- 总计划工作量 -->
		</if>
	    <if test="total_real_workload != null and total_real_workload != ''">
		      AND total_real_workload like '${total_real_workload}%'  <!-- 总实际工作量 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time like '${create_time}%'  <!-- 生成时间 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      AND update_time like '${update_time}%'  <!-- 更新时间 -->
		</if>
	    <if test="state != null and state != ''">
		      AND state like '${state}%'  <!-- 状态，默认1有效，0无效 -->
		</if>
	</sql>
	<!-- Where模糊匹配字段 并集 -->
	<sql id="likeOr">
	    <if test="plan_workload != null and plan_workload != ''">
		      Or plan_workload like '${plan_workload}%'  <!-- 项目的计划工作量 -->
		</if>
	    <if test="real_workload != null and real_workload != ''">
		      Or real_workload like '${real_workload}%'  <!-- 实际工作量 -->
		</if>
	    <if test="total_plan_workload != null and total_plan_workload != ''">
		      Or total_plan_workload like '${total_plan_workload}%'  <!-- 总计划工作量 -->
		</if>
	    <if test="total_real_workload != null and total_real_workload != ''">
		      Or total_real_workload like '${total_real_workload}%'  <!-- 总实际工作量 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      Or create_time like '${create_time}%'  <!-- 生成时间 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      Or update_time like '${update_time}%'  <!-- 更新时间 -->
		</if>
	    <if test="state != null and state != ''">
		      Or state like '${state}%'  <!-- 状态，默认1有效，0无效 -->
		</if>
	</sql>
	
</mapper>