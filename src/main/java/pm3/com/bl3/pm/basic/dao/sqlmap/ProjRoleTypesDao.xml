<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- bs_proj_role_types[ProjRoleTypes]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-12-25 16:20:40 -->
<mapper namespace="com.bl3.pm.basic.dao.ProjRoleTypesDao">
	<!-- 查询多级联动下拉框数据(第一级) -->
	<select id="listComboBoxRoleData" resultType="Dto">
		SELECT
		id AS value, name AS display
		FROM
		aos_role 
	</select>
	
	<!-- 查询有效的角色信息 -->
	<select id="listRolePage" resultType="Dto" parameterType="Dto">
	   SELECT
	   (SELECT
		COUNT(*)
		FROM
			bs_proj_teams
		LEFT JOIN aos_user ON TEAM_USER_ID = id
		WHERE
			trp_code = bs_proj_role_types.TRP_CODE
			<if test="proj_id != null and proj_id != ''">
				AND proj_id = ${proj_id}
			</if>
			AND team_user_id != -1
			AND state = '1')count_role,
	trp_code,
	sort_no,
	aos_role_id,
	(select name from aos_role where id=aos_role_id )aos_role_name,
	trp_name,
	trp_remark,
	(
		CASE
		WHEN state = 0 THEN
			'未启用'
		WHEN state = 1 THEN
			'已启用'
		ELSE
			'已作废'
		END
	)state_name,
	state,
	create_user_id,
	(select name from aos_user where create_user_id=id)create_user_name,
	create_time,
	(select name from aos_user where update_user_id=id)update_user_name,
	update_user_id,
	update_time
FROM
	bs_proj_role_types
		  <where>
			    <if test="trp_name != null and trp_name != ''">
				    AND trp_name LIKE '%${trp_name}%' 
				</if>
				and state=1
			</where>	
			 order by sort_no ASC
	</select>
	
	<!-- 查询资源模块列表 -->
	<select id="listModulesPage" resultType="Dto" parameterType="Dto">
	   SELECT
	trp_code,
	sort_no,
	aos_role_id,
	(select name from aos_role where id=aos_role_id )aos_role_name,
	trp_name,
	trp_remark,
	(
		CASE
		WHEN state = 0 THEN
			'未启用'
		WHEN state = 1 THEN
			'已启用'
		ELSE
			'已作废'
		END
	)state_name,
	state,
	create_user_id,
	(select name from aos_user where create_user_id=id)create_user_name,
	create_time,
	(select name from aos_user where update_user_id=id)update_user_name,
	update_user_id,
	update_time
FROM
	bs_proj_role_types
		  <where>
			    <if test="trp_name != null and trp_name != ''">
				    AND trp_name LIKE '%${trp_name}%' 
				</if>
				and state!="-1"
			</where>	
			 order by sort_no ASC
	</select>
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="ProjRoleTypesPO">
		INSERT INTO bs_proj_role_types (
		<if test="trp_name != null and trp_name != ''">
	         trp_name, <!-- TRP_NAME -->
		</if>
		<if test="trp_remark != null and trp_remark != ''">
	         trp_remark, <!-- TRP_REMARK -->
		</if>
		<if test="state != null and state != ''">
	         state, <!-- STATE -->
		</if>
		<if test="create_user_id != null">
	         create_user_id, <!-- 创建人 -->
		</if>
		<if test="create_time != null and create_time != ''">
	         create_time, <!-- 创建时间 -->
		</if>
		<if test="update_user_id != null">
	         update_user_id, <!-- 更新人 -->
		</if>
		<if test="update_time != null and update_time != ''">
	         update_time, <!-- 更新时间 -->
		</if>
		<if test="aos_role_id != null">
	         aos_role_id, <!-- 系统角色ID -->
		</if>
		<if test="sort_no != null">
	         sort_no, <!-- 系统角色ID -->
		</if>
		<if test="trp_code != null and trp_code != ''">
	          trp_code  <!-- TRP_CODE -->
	   </if>
		)VALUES(
		<if test="trp_name != null and trp_name != ''">
	          #{trp_name, jdbcType=VARCHAR}, <!-- TRP_NAME -->
	    </if>
		<if test="trp_remark != null and trp_remark != ''">
	          #{trp_remark, jdbcType=VARCHAR}, <!-- TRP_REMARK -->
	    </if>
		<if test="state != null and state != ''">
	          #{state, jdbcType=VARCHAR}, <!-- STATE -->
	    </if>
		<if test="create_user_id != null">
	          #{create_user_id, jdbcType=INTEGER}, <!-- 创建人 -->
	    </if>
		<if test="create_time != null and create_time != ''">
	          #{create_time, jdbcType=VARCHAR}, <!-- 创建时间 -->
	    </if>
		<if test="update_user_id != null">
	          #{update_user_id, jdbcType=INTEGER}, <!-- 更新人 -->
	    </if>
		<if test="update_time != null and update_time != ''">
	          #{update_time, jdbcType=VARCHAR}, <!-- 更新时间 -->
	    </if>
		<if test="aos_role_id != null">
	          #{aos_role_id, jdbcType=INTEGER}, <!-- 系统角色ID -->
	    </if>
	    <if test="sort_no != null">
	          #{sort_no, jdbcType=INTEGER}, <!-- 系统角色ID -->
	    </if>
		<if test="trp_code != null and trp_code != ''">
		     #{trp_code, jdbcType=VARCHAR}  <!-- TRP_CODE -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="ProjRoleTypesPO">
		INSERT INTO bs_proj_role_types (
		    <include refid="column" />
		)
		VALUES (
		    #{trp_code, jdbcType=VARCHAR},  <!-- TRP_CODE -->
		    #{trp_name, jdbcType=VARCHAR},  <!-- TRP_NAME -->
		    #{trp_remark, jdbcType=VARCHAR},  <!-- TRP_REMARK -->
		    #{state, jdbcType=VARCHAR},  <!-- STATE -->
		    #{create_user_id, jdbcType=INTEGER},  <!-- 创建人 -->
		    #{create_time, jdbcType=VARCHAR},  <!-- 创建时间 -->
		    #{update_user_id, jdbcType=INTEGER},  <!-- 更新人 -->
		    #{update_time, jdbcType=VARCHAR},  <!-- 更新时间 -->
		    #{aort_no, jdbcType=INTEGER},  <!-- 排序号 -->
		    #{aos_role_id, jdbcType=INTEGER}  <!-- 系统角色ID -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="ProjRoleTypesPO">
		UPDATE bs_proj_role_types
		<set>
			<if test="trp_code != null">
		          trp_code = #{trp_code, jdbcType=VARCHAR},  <!-- TRP_CODE -->
			</if>
			<if test="trp_name != null">
		          trp_name = #{trp_name, jdbcType=VARCHAR},  <!-- TRP_NAME -->
			</if>
			<if test="trp_remark != null">
		          trp_remark = #{trp_remark, jdbcType=VARCHAR},  <!-- TRP_REMARK -->
			</if>
			<if test="state != null">
		          state = #{state, jdbcType=VARCHAR},  <!-- STATE -->
			</if>
			<if test="create_user_id != null">
		          create_user_id = #{create_user_id, jdbcType=INTEGER},  <!-- 创建人 -->
			</if>
			<if test="create_time != null">
		          create_time = #{create_time, jdbcType=VARCHAR},  <!-- 创建时间 -->
			</if>
			<if test="update_user_id != null">
		          update_user_id = #{update_user_id, jdbcType=INTEGER},  <!-- 更新人 -->
			</if>
			<if test="sort_no != null">
		          sort_no = #{sort_no, jdbcType=INTEGER},  <!-- 排序号 -->
			</if>
			<if test="update_time != null">
		          update_time = #{update_time, jdbcType=VARCHAR},  <!-- 更新时间 -->
			</if>
			<if test="aos_role_id != null">
		          aos_role_id = #{aos_role_id, jdbcType=INTEGER},  <!-- 系统角色ID -->
			</if>
		</set>
		WHERE  trp_code = #{trp_code}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM bs_proj_role_types WHERE  trp_code = #{trp_code}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="ProjRoleTypesPO">
		SELECT
		<include refid="column" />
		FROM bs_proj_role_types WHERE  trp_code = #{trp_code}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="ProjRoleTypesPO">
		SELECT
		    <include refid="column" />
		FROM bs_proj_role_types
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="ProjRoleTypesPO">
		SELECT
			<include refid="column" />	
		FROM bs_proj_role_types
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="ProjRoleTypesPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM bs_proj_role_types
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="like" parameterType="Dto" resultType="ProjRoleTypesPO">
		SELECT
			<include refid="column" />	
		FROM bs_proj_role_types
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likeOr" parameterType="Dto" resultType="ProjRoleTypesPO">
		SELECT
			<include refid="column" />	
		FROM bs_proj_role_types
		<where>
		    <include refid="likeOr" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likePage" parameterType="Dto" resultType="ProjRoleTypesPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM bs_proj_role_types
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="likeOrPage" parameterType="Dto" resultType="ProjRoleTypesPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM bs_proj_role_types
		<where>
		    <include refid="likeOr" />
		</where>	
	</select>	
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM bs_proj_role_types
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM bs_proj_role_types
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  trp_code,  <!-- TRP_CODE -->
		  trp_name,  <!-- TRP_NAME -->
		  trp_remark,  <!-- TRP_REMARK -->
		  state,  <!-- STATE -->
		  create_user_id,  <!-- 创建人 -->
		  create_time,  <!-- 创建时间 -->
		  update_user_id,  <!-- 更新人 -->
		  sort_no, <!-- 排序号 -->
		  update_time,  <!-- 更新时间 -->
		  aos_role_id  <!-- 系统角色ID -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  bs_proj_role_types.trp_code,  <!-- TRP_CODE -->
		  bs_proj_role_types.trp_name,  <!-- TRP_NAME -->
		  bs_proj_role_types.trp_remark,  <!-- TRP_REMARK -->
		  bs_proj_role_types.state,  <!-- STATE -->
		  bs_proj_role_types.create_user_id,  <!-- 创建人 -->
		  bs_proj_role_types.create_time,  <!-- 创建时间 -->
		  bs_proj_role_types.update_user_id,  <!-- 更新人 -->
		  bs_proj_role_types.update_time,  <!-- 更新时间 -->
		  bs_proj_role_types.sort_no,  <!-- 排序号 -->
		  bs_proj_role_types.aos_role_id  <!-- 系统角色ID -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="trp_code != null and trp_code != ''">
		      AND trp_code = #{trp_code}  <!-- TRP_CODE -->
		</if>
	    <if test="trp_name != null and trp_name != ''">
		      AND trp_name = #{trp_name}  <!-- TRP_NAME -->
		</if>
	    <if test="trp_remark != null and trp_remark != ''">
		      AND trp_remark = #{trp_remark}  <!-- TRP_REMARK -->
		</if>
	    <if test="state != null and state != ''">
		      AND state = #{state}  <!-- STATE -->
		</if>
	   <if test="create_user_id != null ">
		      AND create_user_id = #{create_user_id}  <!-- 创建人 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time = #{create_time}  <!-- 创建时间 -->
		</if>
	   <if test="update_user_id != null ">
		      AND update_user_id = #{update_user_id}  <!-- 更新人 -->
		</if>
		<if test="sort_no != null ">
		      AND sort_no = #{sort_no}  <!-- 排序号 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      AND update_time = #{update_time}  <!-- 更新时间 -->
		</if>
	   <if test="aos_role_id != null ">
		      AND aos_role_id = #{aos_role_id}  <!-- 系统角色ID -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 交集-->
	<sql id="like">
	    <if test="trp_code != null and trp_code != ''">
		      AND trp_code like '${trp_code}%'  <!-- TRP_CODE -->
		</if>
	    <if test="trp_name != null and trp_name != ''">
		      AND trp_name like '${trp_name}%'  <!-- TRP_NAME -->
		</if>
	    <if test="trp_remark != null and trp_remark != ''">
		      AND trp_remark like '${trp_remark}%'  <!-- TRP_REMARK -->
		</if>
	    <if test="state != null and state != ''">
		      AND state like '${state}%'  <!-- STATE -->
		</if>
		<if test="sort_no != null and sort_no != ''">
		      AND sort_no like '${sort_no}%'  <!-- 排序号 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time like '${create_time}%'  <!-- 创建时间 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      AND update_time like '${update_time}%'  <!-- 更新时间 -->
		</if>
	</sql>
	<!-- Where模糊匹配字段 并集 -->
	<sql id="likeOr">
	    <if test="trp_code != null and trp_code != ''">
		      Or trp_code like '${trp_code}%'  <!-- TRP_CODE -->
		</if>
	    <if test="trp_name != null and trp_name != ''">
		      Or trp_name like '${trp_name}%'  <!-- TRP_NAME -->
		</if>
	    <if test="trp_remark != null and trp_remark != ''">
		      Or trp_remark like '${trp_remark}%'  <!-- TRP_REMARK -->
		</if>
	    <if test="state != null and state != ''">
		      Or state like '${state}%'  <!-- STATE -->
		</if>
		<if test="sort_no != null and sort_no != ''">
		      Or sort_no like '${sort_no}%'  <!-- 排序号 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      Or create_time like '${create_time}%'  <!-- 创建时间 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      Or update_time like '${update_time}%'  <!-- 更新时间 -->
		</if>
	</sql>
	
</mapper>