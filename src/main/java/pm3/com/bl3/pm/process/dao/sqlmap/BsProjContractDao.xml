<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- bs_proj_contract[BsProjContract]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-12-21 16:29:14 -->
<mapper namespace="com.bl3.pm.process.dao.BsProjContractDao">
	
	<!-- 查询多级联动下拉框数据(第一级) -->
	<select id="listComboBoxCascadeData" resultType="Dto">
		SELECT
		proj_id AS value, proj_name AS display
		FROM
		bs_proj_commons 
		limit 10
	</select>
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="CT_ID" parameterType="BsProjContractPO">
		INSERT INTO bs_proj_contract (
		<if test="proj_id != null">
	         proj_id, <!-- 项目ID -->
		</if>
		<if test="cont_name != null and cont_name != ''">
	         cont_name, <!-- 合同名称 -->
		</if>
		<if test="cont_type != null and cont_type != ''">
	         cont_type, <!-- 合同类型 -->
		</if>
		<if test="pt_desc != null and pt_desc != ''">
	         pt_desc, <!-- 付款条件 -->
		</if>
		<if test="total_money != null">
	         total_money, <!-- 总金额 -->
		</if>
		<if test="sign_time != null and sign_time != ''">
	         sign_time, <!-- 签订时间 -->
		</if>
		<if test="create_user_id != null">
	         create_user_id, <!-- 创建人 -->
		</if>
		<if test="create_time != null and create_time != ''">
	         create_time, <!-- 创建时间 -->
		</if>
		<if test="update_user_id != null">
	         update_user_id, <!-- 更新人 -->
		</if>
		<if test="update_time != null and update_time != ''">
	         update_time, <!-- 更新时间 -->
		</if>
		<if test="state != null and state != ''">
	         state, <!-- 状态 -->
		</if>
		<if test="cont_desc != null and cont_desc != ''">
	         cont_desc, <!-- 合同描述 -->
		</if>
	          CT_ID
		)VALUES(
		<if test="proj_id != null">
	          #{proj_id, jdbcType=INTEGER}, <!-- 项目ID -->
	    </if>
		<if test="cont_name != null and cont_name != ''">
	          #{cont_name, jdbcType=VARCHAR}, <!-- 合同名称 -->
	    </if>
		<if test="cont_type != null and cont_type != ''">
	          #{cont_type, jdbcType=VARCHAR}, <!-- 合同类型 -->
	    </if>
		<if test="pt_desc != null and pt_desc != ''">
	          #{pt_desc, jdbcType=VARCHAR}, <!-- 付款条件 -->
	    </if>
		<if test="total_money != null">
	          #{total_money, jdbcType=NUMERIC}, <!-- 总金额 -->
	    </if>
		<if test="sign_time != null and sign_time != ''">
	          #{sign_time, jdbcType=VARCHAR}, <!-- 签订时间 -->
	    </if>
		<if test="create_user_id != null">
	          #{create_user_id, jdbcType=INTEGER}, <!-- 创建人 -->
	    </if>
		<if test="create_time != null and create_time != ''">
	          #{create_time, jdbcType=VARCHAR}, <!-- 创建时间 -->
	    </if>
		<if test="update_user_id != null">
	          #{update_user_id, jdbcType=INTEGER}, <!-- 更新人 -->
	    </if>
		<if test="update_time != null and update_time != ''">
	          #{update_time, jdbcType=VARCHAR}, <!-- 更新时间 -->
	    </if>
		<if test="state != null and state != ''">
	          #{state, jdbcType=VARCHAR}, <!-- 状态 -->
	    </if>
		<if test="cont_desc != null and cont_desc != ''">
	          #{cont_desc, jdbcType=VARCHAR}, <!-- 合同描述 -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="CT_ID" parameterType="BsProjContractPO">
		INSERT INTO bs_proj_contract (
		    <include refid="column" />
		)
		VALUES (
		    #{ct_id, jdbcType=INTEGER},  <!-- 合同ID -->
		    #{proj_id, jdbcType=INTEGER},  <!-- 项目ID -->
		    #{cont_name, jdbcType=VARCHAR},  <!-- 合同名称 -->
		    #{cont_type, jdbcType=VARCHAR},  <!-- 合同类型 -->
		    #{pt_desc, jdbcType=VARCHAR},  <!-- 付款条件 -->
		    #{total_money, jdbcType=NUMERIC},  <!-- 总金额 -->
		    #{sign_time, jdbcType=VARCHAR},  <!-- 签订时间 -->
		    #{create_user_id, jdbcType=INTEGER},  <!-- 创建人 -->
		    #{create_time, jdbcType=VARCHAR},  <!-- 创建时间 -->
		    #{update_user_id, jdbcType=INTEGER},  <!-- 更新人 -->
		    #{update_time, jdbcType=VARCHAR},  <!-- 更新时间 -->
		    #{state, jdbcType=VARCHAR},  <!-- 状态 -->
		    #{cont_desc, jdbcType=VARCHAR}  <!-- 合同描述 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="BsProjContractPO">
		UPDATE bs_proj_contract
		<set>
			<if test="ct_id != null">
		          ct_id = #{ct_id, jdbcType=INTEGER},  <!-- 合同ID -->
			</if>
			<if test="proj_id != null">
		          proj_id = #{proj_id, jdbcType=INTEGER},  <!-- 项目ID -->
			</if>
			<if test="cont_name != null">
		          cont_name = #{cont_name, jdbcType=VARCHAR},  <!-- 合同名称 -->
			</if>
			<if test="cont_type != null">
		          cont_type = #{cont_type, jdbcType=VARCHAR},  <!-- 合同类型 -->
			</if>
			<if test="pt_desc != null">
		          pt_desc = #{pt_desc, jdbcType=VARCHAR},  <!-- 付款条件 -->
			</if>
			<if test="total_money != null">
		          total_money = #{total_money, jdbcType=NUMERIC},  <!-- 总金额 -->
			</if>
			<if test="sign_time != null">
		          sign_time = #{sign_time, jdbcType=VARCHAR},  <!-- 签订时间 -->
			</if>
			<if test="create_user_id != null">
		          create_user_id = #{create_user_id, jdbcType=INTEGER},  <!-- 创建人 -->
			</if>
			<if test="create_time != null">
		          create_time = #{create_time, jdbcType=VARCHAR},  <!-- 创建时间 -->
			</if>
			<if test="update_user_id != null">
		          update_user_id = #{update_user_id, jdbcType=INTEGER},  <!-- 更新人 -->
			</if>
			<if test="update_time != null">
		          update_time = #{update_time, jdbcType=VARCHAR},  <!-- 更新时间 -->
			</if>
			<if test="state != null">
		          state = #{state, jdbcType=VARCHAR},  <!-- 状态 -->
			</if>
			<if test="cont_desc != null">
		          cont_desc = #{cont_desc, jdbcType=VARCHAR},  <!-- 合同描述 -->
			</if>
		</set>
		WHERE  ct_id = #{ct_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM bs_proj_contract WHERE  ct_id = #{ct_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="BsProjContractPO">
		SELECT
		<include refid="column" />
		FROM bs_proj_contract WHERE  ct_id = #{ct_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="BsProjContractPO">
		SELECT
		    <include refid="column" />
		FROM bs_proj_contract
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="BsProjContractPO">
		SELECT
			<include refid="column" />	
		FROM bs_proj_contract
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="BsProjContractPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM bs_proj_contract
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="like" parameterType="Dto" resultType="BsProjContractPO">
		SELECT
			<include refid="column" />	
		FROM bs_proj_contract
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likeOr" parameterType="Dto" resultType="BsProjContractPO">
		SELECT
			<include refid="column" />	
		FROM bs_proj_contract
		<where>
		    <include refid="likeOr" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likePage" parameterType="Dto" resultType="BsProjContractPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM bs_proj_contract
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="likeOrPage" parameterType="Dto" resultType="BsProjContractPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM bs_proj_contract
		<where>
		    proj_id=#{proj_id}
		</where>	
		order by ct_id
	</select>	
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM bs_proj_contract
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM bs_proj_contract
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  ct_id,  <!-- 合同ID -->
		  proj_id,  <!-- 项目ID -->
		  cont_name,  <!-- 合同名称 -->
		  cont_type,  <!-- 合同类型 -->
		  pt_desc,  <!-- 付款条件 -->
		  total_money,  <!-- 总金额 -->
		  sign_time,  <!-- 签订时间 -->
		  create_user_id,  <!-- 创建人 -->
		  create_time,  <!-- 创建时间 -->
		  update_user_id,  <!-- 更新人 -->
		  update_time,  <!-- 更新时间 -->
		  state,  <!-- 状态 -->
		  cont_desc  <!-- 合同描述 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  bs_proj_contract.ct_id,  <!-- 合同ID -->
		  bs_proj_contract.proj_id,  <!-- 项目ID -->
		  bs_proj_contract.cont_name,  <!-- 合同名称 -->
		  bs_proj_contract.cont_type,  <!-- 合同类型 -->
		  bs_proj_contract.pt_desc,  <!-- 付款条件 -->
		  bs_proj_contract.total_money,  <!-- 总金额 -->
		  bs_proj_contract.sign_time,  <!-- 签订时间 -->
		  bs_proj_contract.create_user_id,  <!-- 创建人 -->
		  bs_proj_contract.create_time,  <!-- 创建时间 -->
		  bs_proj_contract.update_user_id,  <!-- 更新人 -->
		  bs_proj_contract.update_time,  <!-- 更新时间 -->
		  bs_proj_contract.state,  <!-- 状态 -->
		  bs_proj_contract.cont_desc  <!-- 合同描述 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="ct_id != null ">
		      AND ct_id = #{ct_id}  <!-- 合同ID -->
		</if>
	   <if test="proj_id != null ">
		      AND proj_id = #{proj_id}  <!-- 项目ID -->
		</if>
	    <if test="cont_name != null and cont_name != ''">
		      AND cont_name = #{cont_name}  <!-- 合同名称 -->
		</if>
	    <if test="cont_type != null and cont_type != ''">
		      AND cont_type = #{cont_type}  <!-- 合同类型 -->
		</if>
	    <if test="pt_desc != null and pt_desc != ''">
		      AND pt_desc = #{pt_desc}  <!-- 付款条件 -->
		</if>
	   <if test="total_money != null ">
		      AND total_money = #{total_money}  <!-- 总金额 -->
		</if>
	    <if test="sign_time != null and sign_time != ''">
		      AND sign_time = #{sign_time}  <!-- 签订时间 -->
		</if>
	   <if test="create_user_id != null ">
		      AND create_user_id = #{create_user_id}  <!-- 创建人 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time = #{create_time}  <!-- 创建时间 -->
		</if>
	   <if test="update_user_id != null ">
		      AND update_user_id = #{update_user_id}  <!-- 更新人 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      AND update_time = #{update_time}  <!-- 更新时间 -->
		</if>
	    <if test="state != null and state != ''">
		      AND state = #{state}  <!-- 状态 -->
		</if>
	    <if test="cont_desc != null and cont_desc != ''">
		      AND cont_desc = #{cont_desc}  <!-- 合同描述 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 交集-->
	<sql id="like">
	    <if test="cont_name != null and cont_name != ''">
		      AND cont_name like '${cont_name}%'  <!-- 合同名称 -->
		</if>
	    <if test="cont_type != null and cont_type != ''">
		      AND cont_type like '${cont_type}%'  <!-- 合同类型 -->
		</if>
	    <if test="pt_desc != null and pt_desc != ''">
		      AND pt_desc like '${pt_desc}%'  <!-- 付款条件 -->
		</if>
	    <if test="sign_time != null and sign_time != ''">
		      AND sign_time like '${sign_time}%'  <!-- 签订时间 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time like '${create_time}%'  <!-- 创建时间 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      AND update_time like '${update_time}%'  <!-- 更新时间 -->
		</if>
	    <if test="state != null and state != ''">
		      AND state like '${state}%'  <!-- 状态 -->
		</if>
	    <if test="cont_desc != null and cont_desc != ''">
		      AND cont_desc like '${cont_desc}%'  <!-- 合同描述 -->
		</if>
	</sql>
	<!-- Where模糊匹配字段 并集 -->
	<sql id="likeOr">
	    <if test="cont_name != null and cont_name != ''">
		      Or cont_name like '${cont_name}%'  <!-- 合同名称 -->
		</if>
	    <if test="cont_type != null and cont_type != ''">
		      Or cont_type like '${cont_type}%'  <!-- 合同类型 -->
		</if>
	    <if test="pt_desc != null and pt_desc != ''">
		      Or pt_desc like '${pt_desc}%'  <!-- 付款条件 -->
		</if>
	    <if test="sign_time != null and sign_time != ''">
		      Or sign_time like '${sign_time}%'  <!-- 签订时间 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      Or create_time like '${create_time}%'  <!-- 创建时间 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      Or update_time like '${update_time}%'  <!-- 更新时间 -->
		</if>
	    <if test="state != null and state != ''">
		      Or state like '${state}%'  <!-- 状态 -->
		</if>
	    <if test="cont_desc != null and cont_desc != ''">
		      Or cont_desc like '${cont_desc}%'  <!-- 合同描述 -->
		</if>
	</sql>
	
</mapper>