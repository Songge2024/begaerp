<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- re_demand_action_file[DemandActionFile]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-12-24 17:03:57 -->
<mapper namespace="com.bl3.pm.requirement.dao.DemandActionFileDao">
	<!--查询项目经理  -->
<select id="queryPmAon" parameterType="Dto" resultType="Dto">
			SELECT DISTINCT
			TEAM_USER_ID as id
		FROM
			bs_proj_teams
		WHERE
			TRP_CODE IN (26)
		AND state = 1
	</select>
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="FAD_ID" parameterType="DemandActionFilePO">
		INSERT INTO re_demand_action_file (
		<if test="ad_id != null">
	         ad_id, <!-- AD_ID -->
		</if>
		<if test="fad_name != null and fad_name != ''">
	         fad_name, <!-- 文件名称 -->
		</if>
		<if test="fad_size != null and fad_size != ''">
	         fad_size, <!-- 文件大小 -->
		</if>
		<if test="fad_path != null and fad_path != ''">
	         fad_path, <!-- 文件存放位置 -->
		</if>
		<if test="fad_adress != null and fad_adress != ''">
	         fad_adress, <!-- 文件访问地址 -->
		</if>
		<if test="fad_code != null and fad_code != ''">
			fad_code,
		</if>
		<if test="update_user_id != null">
	         update_user_id, <!-- 修改人员 -->
		</if>
		<if test="update_time != null and update_time != ''">
	         update_time, <!-- 修改时间 -->
		</if>
		<if test="create_user_id != null">
	         create_user_id, <!-- 创建人 -->
		</if>
		<if test="create_time != null and create_time != ''">
	         create_time, <!-- 创建时间 -->
		</if>
		<if test="state != null and state != ''">
	         state, <!-- 状态 -->
		</if>
	          FAD_ID
		)VALUES(
		<if test="ad_id != null">
	          #{ad_id, jdbcType=INTEGER}, <!-- AD_ID -->
	    </if>
		<if test="fad_name != null and fad_name != ''">
	          #{fad_name, jdbcType=VARCHAR}, <!-- 文件名称 -->
	    </if>
		<if test="fad_size != null and fad_size != ''">
	          #{fad_size, jdbcType=VARCHAR}, <!-- 文件大小 -->
	    </if>
		<if test="fad_path != null and fad_path != ''">
	          #{fad_path, jdbcType=VARCHAR}, <!-- 文件存放位置 -->
	    </if>
		<if test="fad_adress != null and fad_adress != ''">
	          #{fad_adress, jdbcType=VARCHAR}, <!-- 文件访问地址 -->
	    </if>
	    <if test="fad_code != null and fad_code != ''">
	          #{fad_code, jdbcType=VARCHAR}, <!-- 文件访问地址 -->
	    </if>
		<if test="update_user_id != null">
	          #{update_user_id, jdbcType=INTEGER}, <!-- 修改人员 -->
	    </if>
		<if test="update_time != null and update_time != ''">
	          #{update_time, jdbcType=VARCHAR}, <!-- 修改时间 -->
	    </if>
		<if test="create_user_id != null">
	          #{create_user_id, jdbcType=INTEGER}, <!-- 创建人 -->
	    </if>
		<if test="create_time != null and create_time != ''">
	          #{create_time, jdbcType=VARCHAR}, <!-- 创建时间 -->
	    </if>
		<if test="state != null and state != ''">
	          #{state, jdbcType=VARCHAR}, <!-- 状态 -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="FAD_ID" parameterType="DemandActionFilePO">
		INSERT INTO re_demand_action_file (
		    <include refid="column" />
		)
		VALUES (
		    #{fad_id, jdbcType=INTEGER},  <!-- ID -->
		    #{ad_id, jdbcType=INTEGER},  <!-- AD_ID -->
		    #{fad_name, jdbcType=VARCHAR},  <!-- 文件名称 -->
		    #{fad_size, jdbcType=VARCHAR},  <!-- 文件大小 -->
		    #{fad_path, jdbcType=VARCHAR},  <!-- 文件存放位置 -->
		    #{fad_adress, jdbcType=VARCHAR},  <!-- 文件访问地址 -->
		    #{update_user_id, jdbcType=INTEGER},  <!-- 修改人员 -->
		    #{update_time, jdbcType=VARCHAR},  <!-- 修改时间 -->
		    #{create_user_id, jdbcType=INTEGER},  <!-- 创建人 -->
		    #{create_time, jdbcType=VARCHAR},  <!-- 创建时间 -->
		    #{state, jdbcType=VARCHAR}  <!-- 状态 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="DemandActionFilePO">
		UPDATE re_demand_action_file
		<set>
			<if test="fad_id != null">
		          fad_id = #{fad_id, jdbcType=INTEGER},  <!-- ID -->
			</if>
			<if test="ad_id != null">
		          ad_id = #{ad_id, jdbcType=INTEGER},  <!-- AD_ID -->
			</if>
			<if test="fad_name != null">
		          fad_name = #{fad_name, jdbcType=VARCHAR},  <!-- 文件名称 -->
			</if>
			<if test="fad_size != null">
		          fad_size = #{fad_size, jdbcType=VARCHAR},  <!-- 文件大小 -->
			</if>
			<if test="fad_path != null">
		          fad_path = #{fad_path, jdbcType=VARCHAR},  <!-- 文件存放位置 -->
			</if>
			<if test="fad_adress != null">
		          fad_adress = #{fad_adress, jdbcType=VARCHAR},  <!-- 文件访问地址 -->
			</if>
			<if test="fad_code != null">
		          fad_code = #{fad_code, jdbcType=VARCHAR},  <!-- 文件编码-->
			</if>
			<if test="update_user_id != null">
		          update_user_id = #{update_user_id, jdbcType=INTEGER},  <!-- 修改人员 -->
			</if>
			<if test="update_time != null">
		          update_time = #{update_time, jdbcType=VARCHAR},  <!-- 修改时间 -->
			</if>
			<if test="create_user_id != null">
		          create_user_id = #{create_user_id, jdbcType=INTEGER},  <!-- 创建人 -->
			</if>
			<if test="create_time != null">
		          create_time = #{create_time, jdbcType=VARCHAR},  <!-- 创建时间 -->
			</if>
			<if test="state != null">
		          state = #{state, jdbcType=VARCHAR},  <!-- 状态 -->
			</if>
		</set>
		WHERE  fad_id = #{fad_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM re_demand_action_file WHERE  fad_id = #{fad_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="DemandActionFilePO">
		SELECT
		<include refid="column" />
		FROM re_demand_action_file WHERE  fad_id = #{fad_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="DemandActionFilePO">
		SELECT
		    <include refid="column" />
		FROM re_demand_action_file
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="DemandActionFilePO">
		SELECT
			<include refid="column" />	
		FROM re_demand_action_file
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="DemandActionFilePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM re_demand_action_file
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="like" parameterType="Dto" resultType="DemandActionFilePO">
		SELECT
			<include refid="column" />	
		FROM re_demand_action_file
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likeOr" parameterType="Dto" resultType="DemandActionFilePO">
		SELECT
			<include refid="column" />	
		FROM re_demand_action_file
		<where>
		    <include refid="likeOr" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likePage" parameterType="Dto" resultType="DemandActionFilePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM re_demand_action_file
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="likeOrPage" parameterType="Dto" resultType="DemandActionFilePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM re_demand_action_file
		<where>
		    <include refid="likeOr" />
		</where>	
	</select>	
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM re_demand_action_file
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM re_demand_action_file
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  fad_id,  <!-- ID -->
		  ad_id,  <!-- AD_ID -->
		  fad_name,  <!-- 文件名称 -->
		  fad_size,  <!-- 文件大小 -->
		  fad_path,  <!-- 文件存放位置 -->
		  fad_adress,  <!-- 文件访问地址 -->
		  fad_code, <!-- 文件编码 -->
		  update_user_id,  <!-- 修改人员 -->
		  update_time,  <!-- 修改时间 -->
		  create_user_id,  <!-- 创建人 -->
		  create_time,  <!-- 创建时间 -->
		  state  <!-- 状态 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  re_demand_action_file.fad_id,  <!-- ID -->
		  re_demand_action_file.ad_id,  <!-- AD_ID -->
		  re_demand_action_file.fad_name,  <!-- 文件名称 -->
		  re_demand_action_file.fad_size,  <!-- 文件大小 -->
		  re_demand_action_file.fad_path,  <!-- 文件存放位置 -->
		  re_demand_action_file.fad_adress,  <!-- 文件访问地址 -->
		  re_demand_action_file.fad_code,  <!-- 文件编码-->
		  re_demand_action_file.update_user_id,  <!-- 修改人员 -->
		  re_demand_action_file.update_time,  <!-- 修改时间 -->
		  re_demand_action_file.create_user_id,  <!-- 创建人 -->
		  re_demand_action_file.create_time,  <!-- 创建时间 -->
		  re_demand_action_file.state  <!-- 状态 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="fad_id != null ">
		      AND fad_id = #{fad_id}  <!-- ID -->
		</if>
	   <if test="ad_id != null ">
		      AND ad_id = #{ad_id}  <!-- AD_ID -->
		</if>
	    <if test="fad_name != null and fad_name != ''">
		      AND fad_name = #{fad_name}  <!-- 文件名称 -->
		</if>
	    <if test="fad_size != null and fad_size != ''">
		      AND fad_size = #{fad_size}  <!-- 文件大小 -->
		</if>
	    <if test="fad_path != null and fad_path != ''">
		      AND fad_path = #{fad_path}  <!-- 文件存放位置 -->
		</if>
	    <if test="fad_adress != null and fad_adress != ''">
		      AND fad_adress = #{fad_adress}  <!-- 文件访问地址 -->
		</if>
		<if test="fad_code != null and fad_code != ''">
		      AND fad_code = #{fad_code}  <!-- 文件访问地址 -->
		</if>
	   <if test="update_user_id != null ">
		      AND update_user_id = #{update_user_id}  <!-- 修改人员 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      AND update_time = #{update_time}  <!-- 修改时间 -->
		</if>
	   <if test="create_user_id != null ">
		      AND create_user_id = #{create_user_id}  <!-- 创建人 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time = #{create_time}  <!-- 创建时间 -->
		</if>
	    <if test="state != null and state != ''">
		      AND state = #{state}  <!-- 状态 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 交集-->
	<sql id="like">
	    <if test="fad_name != null and fad_name != ''">
		      AND fad_name like '${fad_name}%'  <!-- 文件名称 -->
		</if>
	    <if test="fad_size != null and fad_size != ''">
		      AND fad_size like '${fad_size}%'  <!-- 文件大小 -->
		</if>
	    <if test="fad_path != null and fad_path != ''">
		      AND fad_path like '${fad_path}%'  <!-- 文件存放位置 -->
		</if>
	    <if test="fad_adress != null and fad_adress != ''">
		      AND fad_adress like '${fad_adress}%'  <!-- 文件访问地址 -->
		</if>
		<if test="fad_code != null and fad_code != ''">
		      AND fad_code like '${fad_code}%'  <!-- 文件编码 -->
		</if>
	    <if test="update_time != null and update_time != ''">
		      AND update_time like '${update_time}%'  <!-- 修改时间 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time like '${create_time}%'  <!-- 创建时间 -->
		</if>
	    <if test="state != null and state != ''">
		      AND state like '${state}%'  <!-- 状态 -->
		</if>
	</sql>
	<!-- Where模糊匹配字段 并集 -->
	<sql id="likeOr">
	    <if test="fad_name != null and fad_name != ''">
		      Or fad_name like '${fad_name}%'  <!-- 文件名称 -->
		</if>
	    <if test="fad_size != null and fad_size != ''">
		      Or fad_size like '${fad_size}%'  <!-- 文件大小 -->
		</if>
	    <if test="fad_path != null and fad_path != ''">
		      Or fad_path like '${fad_path}%'  <!-- 文件存放位置 -->
		</if>
	    <if test="fad_adress != null and fad_adress != ''">
		      Or fad_adress like '${fad_adress}%'  <!-- 文件访问地址 -->
		</if>
		<if test="fad_code != null and fad_code != ''">
		      Or fad_code like '${fad_code}%'  <!-- 文件编码-->
		</if>
	    <if test="update_time != null and update_time != ''">
		      Or update_time like '${update_time}%'  <!-- 修改时间 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      Or create_time like '${create_time}%'  <!-- 创建时间 -->
		</if>
	    <if test="state != null and state != ''">
		      Or state like '${state}%'  <!-- 状态 -->
		</if>
	</sql>
	
</mapper>