<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- re_demand_action_upload_template[DemandActionUploadTemplate]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2020-09-06 09:13:27 -->
<mapper namespace="com.bl3.pm.requirement.dao.DemandActionUploadTemplateDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="mould_id" parameterType="DemandActionUploadTemplatePO">
		INSERT INTO re_demand_action_upload_template (
		<if test="file_code != null and file_code != ''">
	         file_code, <!-- 文件编码 -->
		</if>
		<if test="file_title != null and file_title != ''">
	         file_title, <!-- 上传文件标题 -->
		</if>
		<if test="file_size != null and file_size != ''">
	         file_size, <!-- 上传文件大小 -->
		</if>
		<if test="create_user_id != null">
	         create_user_id, <!-- 创建人ID -->
		</if>
		<if test="create_time != null and create_time != ''">
	         create_time, <!-- 创建时间 -->
		</if>
	          mould_id
		)VALUES(
		<if test="file_code != null and file_code != ''">
	          #{file_code, jdbcType=VARCHAR}, <!-- 文件编码 -->
	    </if>
		<if test="file_title != null and file_title != ''">
	          #{file_title, jdbcType=VARCHAR}, <!-- 上传文件标题 -->
	    </if>
		<if test="file_size != null and file_size != ''">
	          #{file_size, jdbcType=VARCHAR}, <!-- 上传文件大小 -->
	    </if>
		<if test="create_user_id != null">
	          #{create_user_id, jdbcType=INTEGER}, <!-- 创建人ID -->
	    </if>
		<if test="create_time != null and create_time != ''">
	          #{create_time, jdbcType=VARCHAR}, <!-- 创建时间 -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="mould_id" parameterType="DemandActionUploadTemplatePO">
		INSERT INTO re_demand_action_upload_template (
		    <include refid="column" />
		)
		VALUES (
		    #{mould_id, jdbcType=INTEGER},  <!-- 导入模板 -->
		    #{file_code, jdbcType=VARCHAR},  <!-- 文件编码 -->
		    #{file_title, jdbcType=VARCHAR},  <!-- 上传文件标题 -->
		    #{file_size, jdbcType=VARCHAR},  <!-- 上传文件大小 -->
		    #{create_user_id, jdbcType=INTEGER},  <!-- 创建人ID -->
		    #{create_time, jdbcType=VARCHAR}  <!-- 创建时间 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="DemandActionUploadTemplatePO">
		UPDATE re_demand_action_upload_template
		<set>
			<if test="mould_id != null">
		          mould_id = #{mould_id, jdbcType=INTEGER},  <!-- 导入模板 -->
			</if>
			<if test="file_code != null">
		          file_code = #{file_code, jdbcType=VARCHAR},  <!-- 文件编码 -->
			</if>
			<if test="file_title != null">
		          file_title = #{file_title, jdbcType=VARCHAR},  <!-- 上传文件标题 -->
			</if>
			<if test="file_size != null">
		          file_size = #{file_size, jdbcType=VARCHAR},  <!-- 上传文件大小 -->
			</if>
			<if test="create_user_id != null">
		          create_user_id = #{create_user_id, jdbcType=INTEGER},  <!-- 创建人ID -->
			</if>
			<if test="create_time != null">
		          create_time = #{create_time, jdbcType=VARCHAR},  <!-- 创建时间 -->
			</if>
		</set>
		WHERE  mould_id = #{mould_id}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM re_demand_action_upload_template WHERE  mould_id = #{mould_id}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="DemandActionUploadTemplatePO">
		SELECT
		<include refid="column" />
		FROM re_demand_action_upload_template WHERE  mould_id = #{mould_id}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="DemandActionUploadTemplatePO">
		SELECT
		    <include refid="column" />
		FROM re_demand_action_upload_template
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="DemandActionUploadTemplatePO">
		SELECT
			<include refid="column" />	
		FROM re_demand_action_upload_template
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="DemandActionUploadTemplatePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM re_demand_action_upload_template
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="like" parameterType="Dto" resultType="DemandActionUploadTemplatePO">
		SELECT
			<include refid="column" />	
		FROM re_demand_action_upload_template
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likeOr" parameterType="Dto" resultType="DemandActionUploadTemplatePO">
		SELECT
			<include refid="column" />	
		FROM re_demand_action_upload_template
		<where>
		    <include refid="likeOr" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)交集 -->
	<select id="likePage" parameterType="Dto" resultType="DemandActionUploadTemplatePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM re_demand_action_upload_template
		<where>
		    <include refid="like" />
		</where>	
	</select>
	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配)并集 -->
	<select id="likeOrPage" parameterType="Dto" resultType="DemandActionUploadTemplatePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM re_demand_action_upload_template
		<where>
		    <include refid="likeOr" />
		</where>	
	</select>	
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM re_demand_action_upload_template
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM re_demand_action_upload_template
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  mould_id,  <!-- 导入模板 -->
		  file_code,  <!-- 文件编码 -->
		  file_title,  <!-- 上传文件标题 -->
		  file_size,  <!-- 上传文件大小 -->
		  create_user_id,  <!-- 创建人ID -->
		  create_time  <!-- 创建时间 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  re_demand_action_upload_template.mould_id,  <!-- 导入模板 -->
		  re_demand_action_upload_template.file_code,  <!-- 文件编码 -->
		  re_demand_action_upload_template.file_title,  <!-- 上传文件标题 -->
		  re_demand_action_upload_template.file_size,  <!-- 上传文件大小 -->
		  re_demand_action_upload_template.create_user_id,  <!-- 创建人ID -->
		  re_demand_action_upload_template.create_time  <!-- 创建时间 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="mould_id != null ">
		      AND mould_id = #{mould_id}  <!-- 导入模板 -->
		</if>
	    <if test="file_code != null and file_code != ''">
		      AND file_code = #{file_code}  <!-- 文件编码 -->
		</if>
	    <if test="file_title != null and file_title != ''">
		      AND file_title = #{file_title}  <!-- 上传文件标题 -->
		</if>
	    <if test="file_size != null and file_size != ''">
		      AND file_size = #{file_size}  <!-- 上传文件大小 -->
		</if>
	   <if test="create_user_id != null ">
		      AND create_user_id = #{create_user_id}  <!-- 创建人ID -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time = #{create_time}  <!-- 创建时间 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 交集-->
	<sql id="like">
	    <if test="file_code != null and file_code != ''">
		      AND file_code like '${file_code}%'  <!-- 文件编码 -->
		</if>
	    <if test="file_title != null and file_title != ''">
		      AND file_title like '${file_title}%'  <!-- 上传文件标题 -->
		</if>
	    <if test="file_size != null and file_size != ''">
		      AND file_size like '${file_size}%'  <!-- 上传文件大小 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      AND create_time like '${create_time}%'  <!-- 创建时间 -->
		</if>
	</sql>
	<!-- Where模糊匹配字段 并集 -->
	<sql id="likeOr">
	    <if test="file_code != null and file_code != ''">
		      Or file_code like '${file_code}%'  <!-- 文件编码 -->
		</if>
	    <if test="file_title != null and file_title != ''">
		      Or file_title like '${file_title}%'  <!-- 上传文件标题 -->
		</if>
	    <if test="file_size != null and file_size != ''">
		      Or file_size like '${file_size}%'  <!-- 上传文件大小 -->
		</if>
	    <if test="create_time != null and create_time != ''">
		      Or create_time like '${create_time}%'  <!-- 创建时间 -->
		</if>
	</sql>
	
</mapper>